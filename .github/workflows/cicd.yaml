name: CI/CD

on:
  push:
    branches: [ "dev" ]
  workflow_dispatch:

env:
  node_version: "18.20.4" 
  docker_repo_owner: "mja123"
  docker_repo_name: "node-security"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.increased_tag.outputs.new_tag }}
    steps:
    - name: Cloning repo 
      uses: actions/checkout@v4
    - name: Setting up node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.node_version }}
    - name: Starting project 
      run: npm install
    - name: Testing
      run: npm run test
    - name: Getting latest tag
      id: latest_tag
      uses: jacobtomlinson/gha-get-docker-hub-tags@0.1.1
      with:
        org: ${{ env.docker_repo_owner }}
        repo: ${{ env.docker_repo_name }}
    - name: Increasing tag
      id: increased_tag
      run: |
        IFS='.' read -r -a current_tag <<< ${{ steps.latest_tag.outputs.tag }}
        current_tag[2]=$(( current_tag[2] + 1 ))
        new_tag=$(IFS='.'; echo "${current_tag[*]}")
        echo "new_tag=$new_tag">> $GITHUB_OUTPUT
    - name: Building Docker image
      run: docker build -t ${{ env.docker_repo_owner }}/${{ env.docker_repo_name }}:${{ steps.increased_tag.outputs.new_tag }} --build-arg TAG="${{ env.node_version }}" --build-arg PORT="${{ vars.NODE_PORT }}" .
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Pushing Docker image
      run: docker push ${{ env.docker_repo_owner }}/${{ env.docker_repo_name }}:${{ steps.increased_tag.outputs.new_tag }}

  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
    - name: Cloning repo 
      uses: actions/checkout@v4
    - name: Setup Terraform with specified version on the runner
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.7
    - name: Terraform init
      id: init
      working-directory: infra
      run: |
        ls
        terraform init
    - name: Terraform plan
      working-directory: infra
      run: terraform plan -var api_token=${{ secrets.API_KEY }} -var image_tag=${{ needs.ci.outputs.image_tag }}
